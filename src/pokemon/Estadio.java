/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pokemon;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.Player;
import models.Pokedex;
import pokemon.Seleccion;
import static pokemon.Seleccion.scaleImage;
/**
 *
 * @author Mansilla
 */
public class Estadio extends javax.swing.JFrame implements  Runnable {

    Pokedex pokedex = new Pokedex();
    int escogido=0;
    int malo=0;
    Player apl;
    boolean sonar=false; 
    /**
     * Creates new form Estadio
     */
    public Estadio() {
        initComponents();        
    }

    Estadio(Pokedex pokedex) throws JavaLayerException  {   
        sonar = false;
        this.pokedex = pokedex;
        initComponents();
        this.jFoto1.setIcon(scaleImage((ImageIcon) new ImageIcon(this.pokedex.getAliados().get(escogido).getRutaImagen()),180,180));
        this.jFoto2.setIcon(scaleImage((ImageIcon) new ImageIcon(this.pokedex.getEnemigos().get(malo).getRutaImagen()),180,180));
        this.jName1.setText(this.pokedex.getAliados().get(escogido).getNombre());
        this.jName2.setText(this.pokedex.getEnemigos().get(malo).getNombre());
        this.jTipe1.setText(this.pokedex.getAliados().get(escogido).getNivel());
        this.jTipe2.setText(this.pokedex.getEnemigos().get(malo).getNivel());
        this.jLive1.setText(String.valueOf(this.pokedex.getAliados().get(escogido).getVida()));
        this.jLive2.setText(String.valueOf(this.pokedex.getEnemigos().get(malo).getVida()));
        try {
            apl = new Player(new FileInputStream(this.pokedex.getAliados().get(escogido).getRutaSonido()));
             apl.play();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Estadio.class.getName()).log(Level.SEVERE, null, ex);
        }
                   
    }

    
    public void uptadeLabels(){
        try{
        this.jFoto1.setIcon(scaleImage((ImageIcon) new ImageIcon(this.pokedex.getAliados().get(escogido).getRutaImagen()),180,180));
        this.jFoto2.setIcon(scaleImage((ImageIcon) new ImageIcon(this.pokedex.getEnemigos().get(malo).getRutaImagen()),180,180));
        this.jName1.setText(this.pokedex.getAliados().get(escogido).getNombre());
        this.jName2.setText(this.pokedex.getEnemigos().get(malo).getNombre());
        this.jTipe1.setText(this.pokedex.getAliados().get(escogido).getNivel());
        this.jTipe2.setText(this.pokedex.getEnemigos().get(malo).getNivel());
        this.jLive1.setText(String.valueOf(this.pokedex.getAliados().get(escogido).getVida()));
        this.jLive2.setText(String.valueOf(this.pokedex.getEnemigos().get(malo).getVida()));
        }catch(IndexOutOfBoundsException d){
            
        }
    }
    
    public void cambioPokemon() throws JavaLayerException{
        if(pokedex.getAliados().get(escogido).getVida()<=0){
            this.escogido++;           
        }
        
        if(this.escogido>=pokedex.getAliados().size()){
            jAttack.setSelected(false);
            JOptionPane.showMessageDialog(null, "Vuelva a intentarlo");    
            this.dispose();
            thread1.stop();
            thread0.stop();
            sonar = false;
                      
            System.out.println("Perdio");
           
           
        }
    }
    
    public void cambioEnemigo(){
        if(pokedex.getEnemigos().get(malo).getVida()<=0){
            this.malo++;           
        }
        if(this.malo>=pokedex.getEnemigos().size()){
            jAttack.setSelected(false);
            JOptionPane.showMessageDialog(null, "Felicidade usted gano");     
            thread1.stop();
            thread0.stop();
            this.dispose();
            sonar = false;
              
            System.out.println("Gano");                        
         
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFoto1 = new javax.swing.JLabel();
        jFoto2 = new javax.swing.JLabel();
        jLive1 = new javax.swing.JLabel();
        jTipe1 = new javax.swing.JLabel();
        jName1 = new javax.swing.JLabel();
        jLive2 = new javax.swing.JLabel();
        jTipe2 = new javax.swing.JLabel();
        jName2 = new javax.swing.JLabel();
        jAttack = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLive1.setText("jLabel1");

        jTipe1.setText("jLabel1");

        jName1.setText("jLabel1");

        jLive2.setText("jLabel1");

        jTipe2.setText("jLabel1");

        jName2.setText("jLabel1");

        jAttack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jAttack.setText("Atacar ->");
        jAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAttackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLive1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTipe1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jName1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jFoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jAttack, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jFoto2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLive2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTipe2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jName2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jFoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jFoto2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jAttack, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jName1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLive1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTipe1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jName2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLive2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTipe2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAttackActionPerformed
        if(jAttack.isSelected()){
            pokedex.ataqueAliado(escogido, malo);
            cambioEnemigo();
            uptadeLabels();
        }
    }//GEN-LAST:event_jAttackActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Estadio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Estadio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Estadio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Estadio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Estadio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton jAttack;
    private javax.swing.JLabel jFoto1;
    private javax.swing.JLabel jFoto2;
    private javax.swing.JLabel jLive1;
    private javax.swing.JLabel jLive2;
    private javax.swing.JLabel jName1;
    private javax.swing.JLabel jName2;
    private javax.swing.JLabel jTipe1;
    private javax.swing.JLabel jTipe2;
    // End of variables declaration//GEN-END:variables

    
    ScheduledExecutorService service = Executors.newSingleThreadScheduledExecutor(); 
    
    Thread thread0 = new Thread(() -> {        
        try{
        while(true){
              Thread.sleep(pokedex.getEnemigos().get(malo).getTiempo()*1000);             
              pokedex.ataqueEnemigo(escogido, malo);
              cambioPokemon();
              uptadeLabels();                  
        }
        }catch(Exception x){
             this.dispose();
        }
        });
    
        Thread thread1 = new Thread(() -> {        
        try{         
                System.gc();
                while(true){
                    if(jAttack.isSelected()){
                    apl.close();
                    apl = new Player(new FileInputStream(this.pokedex.getAliados().get(escogido).getRutaSonido()));
                    apl.play();              
                }
                }
                
        }catch(Exception x){
             
        }
        });
            
    @Override
    public void run() {
        thread0.start();
        thread1.start();      
        //To change body of generated methods, choose Tools | Templates.
    }

    
}


